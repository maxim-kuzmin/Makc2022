Программа состоит из нескольких приложений, каждое из которых упаковано в свой docker-контейнер.

Данные хранятся в базах данных MS SQL Server и MongoDB, упакованных в собственные docker-контейнеры.

Асинхронный обмен данными между приложениями осуществляется с помощью упакованного в docker-контейнер брокера сообщений RabbitMQ.

Запуск программы осуществляется с помощью docker compose.

Работа с данными и вся бизнес-логика сосредоточена в микросервисах - серверных веб-приложениях, открывающих клиентам конечные точки API по протоколам HTTP REST и GRPC:

- Basket.API
- Catalog.API
- Identity.API
- Ordering.API
- Payment.API

Для агрегирующей бизнес-логики, которая собирает и обрабатывает данные сразу из нескольких микросервисов, предназначены BFF (Backend-for-Frontend: https://learn.microsoft.com/en-us/azure/architecture/patterns/backends-for-frontends) - серверные веб-приложения, открывающие клиентам конечные точки API по протоколу HTTP REST:

- Mobile.Shopping.HttpAggregator
- Web.Shopping.HttpAggregator

Запросы в микросервисы могут приходить:

- либо из браузера от одностраничного клиентского Angular веб-приложения WebSPA на порту 5104,

- либо из серверной части клиент-серверного ASP.NET MVC веб-приложения WebMVC на порту 5100,

- либо из мобильного приложения.

Все запросы к микросервисам идут через прокси-сервер (Envoy: https://www.envoyproxy.io/), запущенный в двух контейнерах:

- один для запросов из браузера к порту "5202" или из серверной части клиент-серверного веб-приложения непосредственно по имени сервиса прокси-сервера, заданного в файле docker-compose.yaml, с конфигурацией в файле "src\ApiGateways\Envoy\config\webshopping\envoy.yaml",

- другой для запросов из мобильного приложения к порту "5200" с конфигурацией в файле "src\ApiGateways\Envoy\config\mobileshopping\envoy.yaml".